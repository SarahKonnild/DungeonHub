@page "/register"
@using DungeonHub.Web.ViewModels
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Register</h3>

@if (!registrationSuccessful)
{
    <EditForm Model="@registerModel" OnValidSubmit="@HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Email</label>
            <InputText @bind-Value="registerModel.Email" class="form-control" />
            <ValidationMessage For="@(() => registerModel.Email)" />
        </div>

        <div class="form-group">
            <label>Password</label>
            <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
            <ValidationMessage For="@(() => registerModel.Password)" />
        </div>

        <div class="form-group">
            <label>Confirm Password</label>
            <InputText @bind-Value="registerModel.ConfirmPassword" type="password" class="form-control" />
            <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
        </div>

        <button type="submit" class="btn btn-primary">Register</button>
    </EditForm>

    @if (registrationFailed)
    {
        <div class="alert alert-danger">
            Registration failed. Please try again.
        </div>
    }
}
else
{
    <div class="alert alert-success">
        Registration successful! Redirecting...
    </div>
}

@code {
    private RegisterViewModel registerModel = new();
    private bool registrationSuccessful;
    private bool registrationFailed;

    private async Task HandleRegistration()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/user/register", registerModel);

            if (response.IsSuccessStatusCode)
            {
                registrationSuccessful = true;
                Navigation.NavigateTo("/");
            }
            else
            {
                registrationFailed = true;
            }
        }
        catch (Exception ex)
        {
            registrationFailed = true;
            Console.WriteLine($"Registration failed: {ex.Message}");
        }
    }
}